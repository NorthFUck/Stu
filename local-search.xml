<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>SSM整合</title>
    <link href="/Stu/2022/07/25/SSM%E6%95%B4%E5%90%88/"/>
    <url>/Stu/2022/07/25/SSM%E6%95%B4%E5%90%88/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>SSM整合</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringMVC</title>
    <link href="/Stu/2022/07/25/SpringMVC/"/>
    <url>/Stu/2022/07/25/SpringMVC/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>SpringMVC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis</title>
    <link href="/Stu/2022/07/25/Mybatis/"/>
    <url>/Stu/2022/07/25/Mybatis/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>Mybatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spring</title>
    <link href="/Stu/2022/07/25/Spring/"/>
    <url>/Stu/2022/07/25/Spring/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>Spring</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础</title>
    <link href="/Stu/2022/07/18/JavaScript/"/>
    <url>/Stu/2022/07/18/JavaScript/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux基础</title>
    <link href="/Stu/2022/07/18/Linux%E5%9F%BA%E7%A1%80/"/>
    <url>/Stu/2022/07/18/Linux%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaWeb</title>
    <link href="/Stu/2022/07/18/JavaWeb/"/>
    <url>/Stu/2022/07/18/JavaWeb/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构与算法</title>
    <link href="/Stu/2022/07/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    <url>/Stu/2022/07/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>数据结构与算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mysql</title>
    <link href="/Stu/2022/07/18/Mysql/"/>
    <url>/Stu/2022/07/18/Mysql/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>Mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS基础</title>
    <link href="/Stu/2022/07/18/CSS%E5%9F%BA%E7%A1%80/"/>
    <url>/Stu/2022/07/18/CSS%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML基础</title>
    <link href="/Stu/2022/07/18/HTML%E5%9F%BA%E7%A1%80/"/>
    <url>/Stu/2022/07/18/HTML%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDBC</title>
    <link href="/Stu/2022/07/18/JDBC/"/>
    <url>/Stu/2022/07/18/JDBC/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>JDBC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java8</title>
    <link href="/Stu/2022/07/18/Java8/"/>
    <url>/Stu/2022/07/18/Java8/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java8</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaSE</title>
    <link href="/Stu/2022/07/18/JavaSE/"/>
    <url>/Stu/2022/07/18/JavaSE/</url>
    
    <content type="html"><![CDATA[<h2 id="Java的概述"><a href="#Java的概述" class="headerlink" title="Java的概述"></a>Java的概述</h2><ul><li>Java是sun公司1995年推出的。2009年被Oracle收购</li><li>Java之父——詹姆斯.高斯林</li><li>Java是一门高级编程语言：语言风格接近人类的自然语言，写程序简单易懂</li><li>Java的流行程度很高，商业占用率很高</li><li>重要特性：可移植性……</li></ul><h4 id="Java能干啥"><a href="#Java能干啥" class="headerlink" title="Java能干啥"></a>Java能干啥</h4><ul><li>什么都能干，但是最被市场认可的是企业级开发：京东，淘宝，这样的互联网系统</li></ul><h4 id="Java的技术体系"><a href="#Java的技术体系" class="headerlink" title="Java的技术体系"></a>Java的技术体系</h4><ul><li>JavaSE——标准版：Java技术的核心基础</li><li>JavaEE——企业版：大型互联网企业级解决方案——充分被市场认可</li><li>JavaME——小型版：移动应用的解决方案，没有被市场认可</li></ul><h4 id="Java的产品：JDK"><a href="#Java的产品：JDK" class="headerlink" title="Java的产品：JDK"></a>Java的产品：JDK</h4><ul><li>LTS：长期支持版：JDK 8 ， 11 ， 17</li><li>JDK中要用的2个最重要的程序<ul><li>Javac    编译程序</li><li>Java       执行程序</li></ul></li><li>JDK的组成<ul><li>JVM(Java virtual Machine)——Java虚拟机 ，真正运行Java程序的地方</li><li>核心类库——Java自己写好的程序，给程序员自己的程序调用的</li><li>JRE(Java Runtime Environment) ：Java的运行环境</li><li>JDK(Java Development Kit) ：Java开发工具包(包括上面所有)</li></ul></li></ul><h4 id="Java程序的执行原理"><a href="#Java程序的执行原理" class="headerlink" title="Java程序的执行原理"></a>Java程序的执行原理</h4><ul><li>Java程序最终会翻译，翻译乘计算机能识别的机器语言：000111……这样的形式驱动机器干活</li><li>BUG<ul><li><ol><li>代表程序出现问题或者漏洞的意思</li><li>DEBUG——解决问题的意思</li></ol></li></ul></li></ul><h2 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>注释是什么？</p><ul><li>写在程序中对程序进行解释说明的文字</li></ul></li><li><p>注释种类</p><ul><li>```java<br>// 单行注释<br>/*<pre><code class="hljs">单行注释</code></pre><em>/<br>/</em>*<pre><code class="hljs">文档注释</code></pre>*/<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs aspectj"><br>- ```java<br>  <span class="hljs-keyword">package</span> com.google.note;<br>  <br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@Date</span> 2022/5/15</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@Description</span> 注释</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NoteDemo</span> </span>&#123;<br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>          <span class="hljs-comment">// 输出语句——单行注释</span><br>          System.out.println(<span class="hljs-string">&quot;你好&quot;</span>);<br>      &#125;<br>  <br>      <span class="hljs-comment">/*  多行注释</span><br><span class="hljs-comment">      *</span><br><span class="hljs-comment">      * */</span><br>  <br>      <span class="hljs-comment">/**</span><br><span class="hljs-comment">       *文档注释</span><br><span class="hljs-comment">       * <span class="hljs-doctag">@param</span> number_a</span><br><span class="hljs-comment">       * <span class="hljs-doctag">@param</span> number_b</span><br><span class="hljs-comment">       * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">       */</span><br>      <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sum</span><span class="hljs-params">(<span class="hljs-keyword">int</span> number_a , <span class="hljs-keyword">int</span> number_b)</span> </span>&#123;<br>          <span class="hljs-keyword">return</span> number_a + number_b;<br>      &#125;<br>  &#125;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>注释特点</p><ul><li>不影响程序的运行，编译后的class文件中已经没有注释了</li></ul></li></ul><h3 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h3><ul><li><p>字面量:计算机是用来处理数据的，字面量就是告诉程序员：数据在程序中的书写格式</p><ul><li><p>```java<br>public class LiteralDemo {</p><pre><code class="hljs">public static void main(String[] args) &#123;    // 目标：掌握常见数据在程序中的书写格式    // 数字    System.out.println(666);    // 小数    System.out.println(66.6);    // 字符    System.out.println(&#39;a&#39;);    System.out.println(&#39; &#39;);    // 特殊字符 &#39;\n&#39;:换行 , &#39;\t&#39;:相当于tab键    System.out.println(&#39;\n&#39;);    System.out.println(&#39;\t&#39;);    // 字符串    System.out.println(&quot;凤兮凤兮归故乡&quot;);    // 布尔值    System.out.println(true);    System.out.println(false);&#125;</code></pre><p>}</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br>### 变量<br><br>- &lt;img src=&quot;E:\笔记\Java\img\变量.png&quot;  /&gt;<br><br>  - ```java<br>    <span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> VariableDemo &#123;<br>        <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) &#123;<br>            // 目标：掌握变量的使用方法<br>            <span class="hljs-comment">/*</span><br><span class="hljs-comment">            变量的作用： 存储一个数据的，可以改变里面存的数据</span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">            变量的格式：数据类型 变量名称 = 初始值</span><br><span class="hljs-comment">            */</span><br>            <span class="hljs-type">double</span> <span class="hljs-type">money</span> = <span class="hljs-number">66.0</span>;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(<span class="hljs-type">money</span>);<br>    <br>            <span class="hljs-type">money</span> = <span class="hljs-type">money</span> + <span class="hljs-number">22.0</span>;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(<span class="hljs-type">money</span>);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>变量使用的注意方式</p><ul><li><p>```java<br>/*</p><pre><code class="hljs">    * 1. 变量要先声明再使用    * 2. 什么类型变量存储什么类型的数据    * 3. 变量存在访问范围，同一个范围变量名不能重复    * 4. 变量定义时可以没有初始化值，但是在使用时必须有初始化值    * */</code></pre><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><br>- ```java<br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">VariableDemo2</span> &#123;<br>      <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] args</span>)</span> &#123;<br>          <span class="hljs-comment">// 目标：掌握变量的注意事项</span><br>          <span class="hljs-comment">/*</span><br><span class="hljs-comment">          * 1. 变量要先声明再使用</span><br><span class="hljs-comment">          * 2. 什么类型变量存储什么类型的数据</span><br><span class="hljs-comment">          * 3. 变量存在访问范围，同一个范围变量名不能重复</span><br><span class="hljs-comment">          * 4. 变量定义时可以没有初始化值，但是在使用时必须有初始化值</span><br><span class="hljs-comment">          * */</span><br>          <span class="hljs-comment">// 1. 变量要先声明再使用</span><br>          <span class="hljs-built_in">int</span> number_a = <span class="hljs-number">3</span>;<br>          System.<span class="hljs-keyword">out</span>.println(number_a);<br>  <br>          <span class="hljs-comment">// 2. 什么类型变量存储什么类型的数据</span><br>          <span class="hljs-built_in">double</span> money = <span class="hljs-number">88.8</span>;<br>          System.<span class="hljs-keyword">out</span>.println(money);<br>  <br>          <span class="hljs-comment">// 3. 变量存在访问范围，同一个范围变量名不能重复</span><br>          <span class="hljs-built_in">int</span> number_b = <span class="hljs-number">7</span>;<br>          System.<span class="hljs-keyword">out</span>.println(number_b);<br>  <br>          <span class="hljs-comment">// 4. 变量定义时可以没有初始化值，但是在使用时必须有初始化值</span><br>          <span class="hljs-built_in">int</span> number_c = <span class="hljs-number">100</span>;<br>          <span class="hljs-comment">// Variable &#x27;number_c&#x27; might not have been initialized</span><br>          <span class="hljs-comment">// 变量“number_c”可能尚未初始化</span><br>          System.<span class="hljs-keyword">out</span>.println(number_c);<br></code></pre></td></tr></table></figure><pre><code class="hljs">  &#125;</code></pre><p>  }</p>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">        <br></code></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><ul><li>二进制 <ul><li><img src="E:\笔记\Java\img\二进制转换.png" srcset="/Stu/img/loading.gif" lazyload style="zoom:80%;" /></li><li>十进制转二进制<ul><li><img src="E:\笔记\Java\img\进制转换.png" srcset="/Stu/img/loading.gif" lazyload></li></ul></li></ul></li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li>引用数据类型：String</li><li>基本数据类型：4大类8种<ul><li>byte short int(默认) long 整型</li><li>flot double(默认) 浮点型</li><li>char 字符型</li><li>boolean 布尔型</li></ul></li><li>随便写的整数，小数字面默认什么类型？<ul><li>23 ， 默认是 int 类型， 加上L/L就是long类型的数据</li><li>23.8 ， 默认是double类型 ， 加上F/f就是float类型了</li></ul></li></ul><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><ul><li>Java自己保留的，我们不能用来取名字</li></ul><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><ul><li>取名字的规则，数字，字母，下划线 ， 美元符号组成等</li><li>数字不能开头，不能是关键字</li></ul><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ul><li><p><strong>整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。</strong></p><p>转换从低级到高级。</p></li><li><p>自动类型转换 是？</p><ul><li>类型范围小的变量，可以直接赋值给类型范围大的变量</li></ul></li><li><p>进行类型转换的原因</p><ul><li>存在不同类型的变量赋值给其他类型的变量</li></ul></li><li><p>自动类型转换是什么样的？</p><ul><li>类型范围小的变量，可以直接赋值给类型范围大的变量</li></ul></li><li><p>数据类型转换必须满足如下规则：</p><ul><li>\1. 不能对boolean类型进行类型转换。</li><li>\2. 不能把对象类型转换成不相关类的对象。</li><li>\3. 在把容量大的类型转换为容量小的类型时必须使用强制类型转换。</li><li>\4. 转换过程中可能导致溢出或损失精度，</li></ul></li><li><p>```java<br>/*</p><pre><code class="hljs">低  ------------------------------------&gt;  高byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double </code></pre><p>*/</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><br>- ```java<br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">TypeDemo</span> &#123;<br>      <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] args</span>)</span> &#123;<br>          <span class="hljs-comment">// 目标：理解自动类型转换</span><br>          <span class="hljs-built_in">byte</span> number_a = <span class="hljs-number">10</span>;<br>          <span class="hljs-built_in">int</span> number_b = number_a;<br>          <span class="hljs-comment">// 自动类型转换</span><br>          System.<span class="hljs-keyword">out</span>.println(number_a);<br>          System.<span class="hljs-keyword">out</span>.println(number_b);<br></code></pre></td></tr></table></figure><pre><code class="hljs">&#125;</code></pre><p>}</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">  <br></code></pre></td></tr></table></figure></li></ul><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li>菜鸟教程</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Stu</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span> <span class="hljs-params">(String args[])</span> &#123;<br>    System.out.println(number_a + number_b);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaSE</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
